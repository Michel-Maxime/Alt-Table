{
  "swagger": "2.0",
  "info": {
    "description": "Swagger of all the routes of Alt'",
    "version": "1.0.0",
    "title": "Swagger Alt'Table"
  },
  "host": "localhost:8000",
  "tags": [
    {
      "name": "menu",
      "description": "Retrieve all the meals that are available"
    },
    {
      "name": "meals",
      "description": "Manage the meals of the restaurant"
    },
    {
      "name": "seatingplan",
      "description": "Manage the service"
    },
    {
      "name": "services",
      "description": "Manage the service"
    },
    {
      "name": "clients",
      "description": "Manage the clients"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/menu": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Retrieve the menu",
        "operationId": "getmenu",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Menu retrieved"
          },
          "500": {
            "description": "Menu is empty"
          }
        }
      }
    },
    "/meals": {
      "get": {
        "tags": [
          "meals"
        ],
        "summary": "Find all the meals",
        "operationId": "getmeals",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All the meals are retrieved"
          },
          "500": {
            "description": "The list of meals is empty"
          }
        }
      },
      "post": {
        "tags": [
          "meals"
        ],
        "summary": "Add a meal",
        "operationId": "postmeal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The meal is added"
          },
          "500": {
            "description": "The list of meals is empty"
          }
        },
        "parameters": [
          {
            "name": "meal",
            "in": "body",
            "description": "Name of the meal you want to add",
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          }
        ]
      }
    },
    "/meals/{name}": {
      "delete": {
        "tags": [
          "meals"
        ],
        "summary": "Delete a meal using it's name",
        "operationId": "deletemeal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Meal was deleted"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the meal you want to delete",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "tags": [
          "meals"
        ],
        "summary": "Update the quantity of a meal",
        "operationId": "updatemeal",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Meal quantity was updated"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the meal you want to update the quantity",
            "required": true,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "quantity"
              ],
              "properties": {
                "quantity": {
                  "type": "number"
                }
              }
            }
          }
        ]
      }
    },
    "/seatingPlan": {
      "post": {
        "tags": [
          "seatingplan"
        ],
        "summary": "Declare a seating plan",
        "operationId": "postseatingplan",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Seating plan is created"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "name": "seating plan",
            "in": "body",
            "description": "Declare the seating plan for a given date",
            "schema": {
              "type": "object",
              "required": [
                "seatingPlanStatus"
              ],
              "properties": {
                "tableList": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/table"
                  }
                },
                "seatingPlanStatus": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "/service": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Start a service",
        "operationId": "startservice",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Service is started"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/service/{_id}": {
      "patch": {
        "tags": [
          "services"
        ],
        "summary": "End a service",
        "operationId": "endservice",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Service is started"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "Id of the service to end",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/clients": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Add clients to a table",
        "operationId": "clients",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Clients were added to the table"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "name": "clients",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "nbClients",
                "tableNumero"
              ],
              "properties": {
                "tableNumero": {
                  "type": "number"
                },
                "nbClients": {
                  "type": "number"
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "table": {
      "type": "object",
      "required": [
        "tableNumero",
        "maxClient"
      ],
      "properties": {
        "tableNumero": {
          "type": "integer"
        },
        "maxClient": {
          "type": "number"
        },
        "available": {
          "type": "boolean"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}